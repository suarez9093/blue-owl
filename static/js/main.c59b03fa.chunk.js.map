{"version":3,"sources":["context/context.js","components/Header/index.js","components/Cards/Card/index.js","components/Cards/index.js","components/Instructions/pic.jpg","components/Instructions/index.js","components/Footer/index.js","App.js","index.js"],"names":["context","React","createContext","ContextProvider","children","useState","cards","setCards","isSorted","setIsSorted","e","a","fetch","proxy","response","json","randomNumber","prevState","console","error","Provider","value","handleAddCard","handleSortCard","sortedCards","sort","b","handleDeleteCard","props","array","splice","id","Header","useContext","className","onClick","Card","card","Cards","handleSortCards","map","index","Instructions","src","image","alt","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"uNACMA,EAAUC,IAAMC,gBACtB,SAASC,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAELF,oBAAS,GAFJ,mBAE9BG,EAF8B,KAEpBC,EAFoB,iDAIrC,WAA6BC,GAA7B,iBAAAC,EAAA,sEAEIF,GAAY,GAEE,yCAJlB,SAK2BG,MACrBC,8GANN,cAKUC,EALV,gBAU+BA,EAASC,OAVxC,OAUUC,EAVV,OAYIT,GAAS,SAACU,GAAD,4BAAmBA,GAAnB,CAA8BD,EAAa,QAZxD,kDAcIE,QAAQC,MAAR,MAdJ,2DAJqC,sBAiCrC,OACE,cAACnB,EAAQoB,SAAT,CACEC,MAAO,CACLb,WACAF,QACAC,WACAe,cAvC+B,4CAwC/BC,eAZN,SAAwBb,GACtB,IAAIc,EAAclB,EAAMmB,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAIe,KAC3CnB,EAASiB,GACTf,GAAY,IAURkB,iBAnBN,SAA0BjB,EAAGkB,GAC3B,IAAIC,EAAK,YAAOvB,GAChBuB,EAAMC,OAAOF,EAAMG,GAAI,GACvBxB,EAASsB,KAST,SAUGzB,IC/BQ4B,MAbf,WAAmB,IAAD,EAC0BC,qBAAWjC,GAA7CsB,EADQ,EACRA,cAAeC,EADP,EACOA,eACvB,OACE,yBAAQW,UAAU,SAAlB,UACE,wBAAQC,QAASb,EAAeY,UAAU,sBAA1C,sBAGA,wBAAQC,QAASZ,EAAgBW,UAAU,sBAA3C,4BCKSE,MAZf,SAAcR,GAAQ,IACZD,EAAqBM,qBAAWjC,GAAhC2B,iBAER,OACE,sBAAKO,UAAU,OAAf,UACGN,EAAMS,KACP,wBAAQF,QAAS,SAACzB,GAAD,OAAOiB,EAAiBjB,EAAGkB,IAAQM,UAAU,MAA9D,mBCQSI,MAZf,WAAkB,IAAD,EAC8BL,qBAAWjC,GAAhDM,EADO,EACPA,MAAwBE,GADjB,EACA+B,gBADA,EACiB/B,UAEhC,OACE,sBAAK0B,UAAU,QAAf,UACG1B,GACCF,EAAMkC,KAAI,SAACH,EAAMI,GAAP,OAAiB,cAAC,EAAD,CAAMV,GAAIU,EAAmBJ,KAAMA,GAAbI,OACjDjC,GACAF,EAAMkC,KAAI,SAACH,EAAMI,GAAP,OAAiB,cAAC,EAAD,CAAMV,GAAIU,EAAmBJ,KAAMA,GAAbI,UCZ1C,MAA0B,gCCiC1BC,MA/Bf,WACE,OACE,sBAAKR,UAAU,yBAAf,UACE,qBAAKA,UAAU,qBAAqBS,IAAKC,EAAOC,IAAI,iBACpD,mBAAGX,UAAU,eAAb,6+CCDSY,MAHf,WACE,OAAO,wBAAQZ,UAAU,YCcZa,MAXf,WACE,OACE,sBAAKb,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCPNc,IAASC,OACP,cAAC9C,EAAD,UACE,cAAC,EAAD,MAEF+C,SAASC,eAAe,W","file":"static/js/main.c59b03fa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nconst context = React.createContext();\nfunction ContextProvider({ children }) {\n  const [cards, setCards] = useState([]);\n  const [isSorted, setIsSorted] = useState(false);\n\n  async function handleAddCard(e) {\n    try {\n      setIsSorted(false);\n\n      const proxy = 'https://thingproxy.freeboard.io/fetch/';\n      const response = await fetch(\n        proxy +\n          'http://www.randomnumberapi.com/api/v1.0/random?min=0&max=100&count=1'\n      );\n\n      const randomNumber = await response.json();\n\n      setCards((prevState) => [...prevState, randomNumber[0]]);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function handleDeleteCard(e, props) {\n    let array = [...cards];\n    array.splice(props.id, 1);\n    setCards(array);\n  }\n\n  function handleSortCard(e) {\n    let sortedCards = cards.sort((a, b) => a - b);\n    setCards(sortedCards);\n    setIsSorted(true);\n  }\n  return (\n    <context.Provider\n      value={{\n        isSorted,\n        cards,\n        setCards,\n        handleAddCard,\n        handleSortCard,\n        handleDeleteCard,\n      }}\n    >\n      {children}\n    </context.Provider>\n  );\n}\n\nexport { ContextProvider, context };\n","import React, { useContext } from 'react';\nimport { context } from '../../context/context';\nfunction Header() {\n  const { handleAddCard, handleSortCard } = useContext(context);\n  return (\n    <header className='header'>\n      <button onClick={handleAddCard} className='header-add-card-btn'>\n        Add Card\n      </button>\n      <button onClick={handleSortCard} className='header-add-card-btn'>\n        Sort Cards\n      </button>\n    </header>\n  );\n}\nexport default Header;\n","import React, { useContext } from 'react';\nimport { context } from '../../../context/context';\nfunction Card(props) {\n  const { handleDeleteCard } = useContext(context);\n\n  return (\n    <div className='card'>\n      {props.card}\n      <button onClick={(e) => handleDeleteCard(e, props)} className='btn'>\n        x\n      </button>\n    </div>\n  );\n}\nexport default Card;\n","import React, { useContext, useEffect } from 'react';\nimport Card from './Card';\nimport { context } from '../../context/context';\n\nfunction Cards() {\n  const { cards, handleSortCards, isSorted } = useContext(context);\n\n  return (\n    <div className='cards'>\n      {isSorted &&\n        cards.map((card, index) => <Card id={index} key={index} card={card} />)}\n      {!isSorted &&\n        cards.map((card, index) => <Card id={index} key={index} card={card} />)}\n    </div>\n  );\n}\nexport default Cards;\n","export default __webpack_public_path__ + \"static/media/pic.6e66a029.jpg\";","import React from 'react';\nimport image from './pic.jpg';\nfunction Instructions() {\n  return (\n    <div className='instructions-container'>\n      <img className='instructions-image' src={image} alt='instructions' />\n      <p className='instructions'>\n        Please create a responsive React application (using javascript or\n        typescript) that displays a list of cards on a page as shown below.\n        There is a fixed-width pane on the right side of the window that remains\n        attached to the right side when the user re-sizes. Inside the pane,\n        please paste a formatted display of these instructions. And if the\n        browser width is small, hide the pane completely. There is a\n        fixed-height toolbar on the top of the window that has buttons. There is\n        a fixed-height footer on the bottom of the window that just shows the\n        text \"footer\". The main center portion of the window is the card\n        container. It should start out with zero cards. Cards are only added\n        when the user clicks 'add card' in the top toolbar. It has a vertical\n        scrollbar which can be used if there are too many cards to display at\n        once. It lays out the cards in rows, wrapping as needed. In this mockup\n        only 2 cards are shown per row, but if the browser is wider, 3 or more\n        cards might fit in a row. If narrower, maybe only 1 card would be\n        visible. Each card has a set pixel size, such as 300px by 250px, but you\n        can decide what size you wish to use. Upon instantiation, a card should\n        be given a random number between 0 and 100 and display it in the center\n        of the card. Each card has a button in the top-right corner which can be\n        used to delete the card. If the user clicks the 'sort cards' button at\n        the top of the page, please sort the cards in order of the number that\n        is shown in the center of each card.\n      </p>\n    </div>\n  );\n}\nexport default Instructions;\n","import React from 'react';\n\nfunction Footer() {\n  return <footer className='footer'></footer>;\n}\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport Cards from './components/Cards';\nimport Instructions from './components/Instructions';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Cards />\n      <Instructions />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ContextProvider } from './context/context';\nimport './index.css';\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}